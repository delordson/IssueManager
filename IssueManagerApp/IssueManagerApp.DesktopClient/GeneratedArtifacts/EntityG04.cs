

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Issue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Issue entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Issue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Issue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Issue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueTitle
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueTitle);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueTitle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueTitle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueTitle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueTitle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateRaised
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateRaised);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateRaised, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueDescription
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDescription);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Status
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Status_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Priority
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IssueImpactAssessment
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueImpactAssessment);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueImpactAssessment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueImpactAssessment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueImpactAssessment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueImpactAssessment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetResolutionDate
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetResolutionDate);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetResolutionDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CorrectiveAction
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveAction);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveAction, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAction_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAction_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAction_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CorrectiveActionCompletionTargetDate
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveActionCompletionTargetDate);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveActionCompletionTargetDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveActionCompletionTargetDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveActionCompletionTargetDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveActionCompletionTargetDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCorrectiveActionCompleted
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateCorrectiveActionCompleted);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateCorrectiveActionCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveActionCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveActionCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveActionCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string PreventativeAction
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeAction);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeAction, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeAction_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeAction_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeAction_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PreventativeActionCompletionTargetDate
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeActionCompletionTargetDate);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeActionCompletionTargetDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeActionCompletionTargetDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeActionCompletionTargetDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PreventativeActionCompletionTargetDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DatePreventativeActionCompleted
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DatePreventativeActionCompleted);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DatePreventativeActionCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DatePreventativeActionCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DatePreventativeActionCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DatePreventativeActionCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateIssueClosed
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateIssueClosed);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateIssueClosed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssueClosed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssueClosed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateIssueClosed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee IssueOwner
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueOwner_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueOwner_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueOwner_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.IssueType IssueType
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IssueType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.Issue.DetailsClass.SetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.FurtherAction> FurtherActions
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.FurtherActions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.FurtherAction> FurtherActionsQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.FurtherActions);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.IssueComment> IssueComments
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetValue(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueComments);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.IssueComment> IssueCommentsQuery
        {
            get
            {
                return global::LightSwitchApplication.Issue.DetailsClass.GetQuery(this, global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueComments);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Issue,
                global::LightSwitchApplication.Issue.DetailsClass,
                global::LightSwitchApplication.Issue.DetailsClass.IImplementation,
                global::LightSwitchApplication.Issue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry
                __IssueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>.Entry(
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_CreateNew,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_Created,
                    global::LightSwitchApplication.Issue.DetailsClass.__Issue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Issue __Issue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Issue> es)
            {
                return new global::LightSwitchApplication.Issue(es);
            }
            private static void __Issue_Created(global::LightSwitchApplication.Issue e)
            {
                e.Issue_Created();
            }
            private static bool __Issue_AllowSaveWithErrors(global::LightSwitchApplication.Issue e)
            {
                bool result = false;
                e.Issue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Issue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> IssueTitle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueTitle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> DateRaised
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateRaised) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> IssueDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Status
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Status) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> IssueImpactAssessment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueImpactAssessment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime> TargetResolutionDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.TargetResolutionDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> CorrectiveAction
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveAction) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> CorrectiveActionCompletionTargetDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CorrectiveActionCompletionTargetDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCorrectiveActionCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateCorrectiveActionCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> PreventativeAction
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeAction) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> PreventativeActionCompletionTargetDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.PreventativeActionCompletionTargetDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> DatePreventativeActionCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DatePreventativeActionCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>> DateIssueClosed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.DateIssueClosed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee> IssueOwner
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType> IssueType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction> FurtherActions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.FurtherActions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment> IssueComments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueComments) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string IssueTitle { get; set; }
                new global::System.DateTime DateRaised { get; set; }
                new string IssueDescription { get; set; }
                new string Status { get; set; }
                new string Priority { get; set; }
                new string IssueImpactAssessment { get; set; }
                new global::System.DateTime TargetResolutionDate { get; set; }
                new string CorrectiveAction { get; set; }
                new global::System.Nullable<global::System.DateTime> CorrectiveActionCompletionTargetDate { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCorrectiveActionCompleted { get; set; }
                new string PreventativeAction { get; set; }
                new global::System.Nullable<global::System.DateTime> PreventativeActionCompletionTargetDate { get; set; }
                new global::System.Nullable<global::System.DateTime> DatePreventativeActionCompleted { get; set; }
                new global::System.Nullable<global::System.DateTime> DateIssueClosed { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation IssueOwner { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation IssueType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::System.Collections.IEnumerable FurtherActions { get; }
                new global::System.Collections.IEnumerable IssueComments { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    IssueTitle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "IssueTitle",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueTitle_OnValueChanged);
                private static void _IssueTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueTitle, sf);
                }
                private static bool _IssueTitle_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueTitle_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueTitle_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueTitle_Validate(r);
                }
                private static string _IssueTitle_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueTitle;
                }
                private static void _IssueTitle_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IssueTitle = v;
                }
                private static void _IssueTitle_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueTitle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    DateRaised = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "DateRaised",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateRaised_OnValueChanged);
                private static void _DateRaised_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._DateRaised, sf);
                }
                private static bool _DateRaised_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.DateRaised_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateRaised_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateRaised_Validate(r);
                }
                private static global::System.DateTime _DateRaised_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.DateRaised;
                }
                private static void _DateRaised_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateRaised = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _DateRaised_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.DateRaised_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    IssueDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "IssueDescription",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueDescription_OnValueChanged);
                private static void _IssueDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueDescription, sf);
                }
                private static bool _IssueDescription_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueDescription_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueDescription_Validate(r);
                }
                private static string _IssueDescription_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueDescription;
                }
                private static void _IssueDescription_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IssueDescription = v;
                }
                private static void _IssueDescription_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Status = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Status",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Status_OnValueChanged);
                private static void _Status_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Status, sf);
                }
                private static bool _Status_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Status_IsReadOnly(ref result);
                    return result;
                }
                private static void _Status_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Status_Validate(r);
                }
                private static string _Status_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Status;
                }
                private static void _Status_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Status = v;
                }
                private static void _Status_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Status_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "Priority",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static string _Priority_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    IssueImpactAssessment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "IssueImpactAssessment",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueImpactAssessment_OnValueChanged);
                private static void _IssueImpactAssessment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueImpactAssessment, sf);
                }
                private static bool _IssueImpactAssessment_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueImpactAssessment_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueImpactAssessment_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueImpactAssessment_Validate(r);
                }
                private static string _IssueImpactAssessment_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueImpactAssessment;
                }
                private static void _IssueImpactAssessment_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IssueImpactAssessment = v;
                }
                private static void _IssueImpactAssessment_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueImpactAssessment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry
                    TargetResolutionDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Entry(
                        "TargetResolutionDate",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._TargetResolutionDate_OnValueChanged);
                private static void _TargetResolutionDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetResolutionDate, sf);
                }
                private static bool _TargetResolutionDate_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.TargetResolutionDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetResolutionDate_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetResolutionDate_Validate(r);
                }
                private static global::System.DateTime _TargetResolutionDate_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetResolutionDate;
                }
                private static void _TargetResolutionDate_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetResolutionDate = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _TargetResolutionDate_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.TargetResolutionDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    CorrectiveAction = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "CorrectiveAction",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveAction_OnValueChanged);
                private static void _CorrectiveAction_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._CorrectiveAction, sf);
                }
                private static bool _CorrectiveAction_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.CorrectiveAction_IsReadOnly(ref result);
                    return result;
                }
                private static void _CorrectiveAction_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CorrectiveAction_Validate(r);
                }
                private static string _CorrectiveAction_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.CorrectiveAction;
                }
                private static void _CorrectiveAction_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CorrectiveAction = v;
                }
                private static void _CorrectiveAction_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.CorrectiveAction_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CorrectiveActionCompletionTargetDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CorrectiveActionCompletionTargetDate",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CorrectiveActionCompletionTargetDate_OnValueChanged);
                private static void _CorrectiveActionCompletionTargetDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._CorrectiveActionCompletionTargetDate, sf);
                }
                private static bool _CorrectiveActionCompletionTargetDate_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.CorrectiveActionCompletionTargetDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CorrectiveActionCompletionTargetDate_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CorrectiveActionCompletionTargetDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CorrectiveActionCompletionTargetDate_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.CorrectiveActionCompletionTargetDate;
                }
                private static void _CorrectiveActionCompletionTargetDate_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CorrectiveActionCompletionTargetDate = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _CorrectiveActionCompletionTargetDate_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.CorrectiveActionCompletionTargetDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCorrectiveActionCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCorrectiveActionCompleted",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateCorrectiveActionCompleted_OnValueChanged);
                private static void _DateCorrectiveActionCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCorrectiveActionCompleted, sf);
                }
                private static bool _DateCorrectiveActionCompleted_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.DateCorrectiveActionCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCorrectiveActionCompleted_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCorrectiveActionCompleted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCorrectiveActionCompleted_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCorrectiveActionCompleted;
                }
                private static void _DateCorrectiveActionCompleted_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCorrectiveActionCompleted = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _DateCorrectiveActionCompleted_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.DateCorrectiveActionCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    PreventativeAction = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "PreventativeAction",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeAction_OnValueChanged);
                private static void _PreventativeAction_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._PreventativeAction, sf);
                }
                private static bool _PreventativeAction_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.PreventativeAction_IsReadOnly(ref result);
                    return result;
                }
                private static void _PreventativeAction_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PreventativeAction_Validate(r);
                }
                private static string _PreventativeAction_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.PreventativeAction;
                }
                private static void _PreventativeAction_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.PreventativeAction = v;
                }
                private static void _PreventativeAction_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.PreventativeAction_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PreventativeActionCompletionTargetDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PreventativeActionCompletionTargetDate",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._PreventativeActionCompletionTargetDate_OnValueChanged);
                private static void _PreventativeActionCompletionTargetDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._PreventativeActionCompletionTargetDate, sf);
                }
                private static bool _PreventativeActionCompletionTargetDate_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.PreventativeActionCompletionTargetDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PreventativeActionCompletionTargetDate_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PreventativeActionCompletionTargetDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PreventativeActionCompletionTargetDate_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.PreventativeActionCompletionTargetDate;
                }
                private static void _PreventativeActionCompletionTargetDate_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PreventativeActionCompletionTargetDate = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _PreventativeActionCompletionTargetDate_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.PreventativeActionCompletionTargetDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DatePreventativeActionCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DatePreventativeActionCompleted",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DatePreventativeActionCompleted_OnValueChanged);
                private static void _DatePreventativeActionCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._DatePreventativeActionCompleted, sf);
                }
                private static bool _DatePreventativeActionCompleted_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.DatePreventativeActionCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DatePreventativeActionCompleted_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DatePreventativeActionCompleted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DatePreventativeActionCompleted_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.DatePreventativeActionCompleted;
                }
                private static void _DatePreventativeActionCompleted_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DatePreventativeActionCompleted = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _DatePreventativeActionCompleted_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.DatePreventativeActionCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateIssueClosed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateIssueClosed",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._DateIssueClosed_OnValueChanged);
                private static void _DateIssueClosed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._DateIssueClosed, sf);
                }
                private static bool _DateIssueClosed_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.DateIssueClosed_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateIssueClosed_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateIssueClosed_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateIssueClosed_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.DateIssueClosed;
                }
                private static void _DateIssueClosed_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateIssueClosed = global::LightSwitchApplication.Issue.DetailsClass.TruncateDate(v);
                }
                private static void _DateIssueClosed_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.DateIssueClosed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    IssueOwner = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "IssueOwner",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueOwner_OnValueChanged);
                private static void _IssueOwner_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueOwner, sf);
                }
                private static bool _IssueOwner_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueOwner_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueOwner_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueOwner_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _IssueOwner_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueOwner;
                }
                private static global::LightSwitchApplication.Employee _IssueOwner_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner, ref d._IssueOwner);
                }
                private static void _IssueOwner_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner, ref d._IssueOwner, (i, ev) => i.IssueOwner = ev, v);
                }
                private static void _IssueOwner_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueOwner, ref d._IssueOwner);
                }
                private static void _IssueOwner_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueOwner_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType>.Entry
                    IssueType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType>.Entry(
                        "IssueType",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueType_OnValueChanged);
                private static void _IssueType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueType, sf);
                }
                private static bool _IssueType_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.IssueType_IsReadOnly(ref result);
                    return result;
                }
                private static void _IssueType_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IssueType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _IssueType_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueType;
                }
                private static global::LightSwitchApplication.IssueType _IssueType_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.IssueType, global::LightSwitchApplication.IssueType.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType, ref d._IssueType);
                }
                private static void _IssueType_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.IssueType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType, ref d._IssueType, (i, ev) => i.IssueType = ev, v);
                }
                private static void _IssueType_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueType, ref d._IssueType);
                }
                private static void _IssueType_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.IssueType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.Issue e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.Issue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.Issue e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction>.Entry
                    FurtherActions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction>.Entry(
                        "FurtherActions",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._FurtherActions_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._FurtherActions_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._FurtherActions_GetEntityCollection);
                private static void _FurtherActions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._FurtherActions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FurtherAction> _FurtherActions_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.FurtherAction, global::LightSwitchApplication.FurtherAction.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.FurtherActions, ref d._FurtherActions);
                }
                private static global::System.Collections.IEnumerable _FurtherActions_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.FurtherActions;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment>.Entry
                    IssueComments = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment>.Entry(
                        "IssueComments",
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueComments_Stub,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueComments_GetReferencedEntities,
                        global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties._IssueComments_GetEntityCollection);
                private static void _IssueComments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Issue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment>.Data> c, global::LightSwitchApplication.Issue.DetailsClass d, object sf)
                {
                    c(d, ref d._IssueComments, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.IssueComment> _IssueComments_GetReferencedEntities(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.IssueComment, global::LightSwitchApplication.IssueComment.DetailsClass>(global::LightSwitchApplication.Issue.DetailsClass.PropertySetProperties.IssueComments, ref d._IssueComments);
                }
                private static global::System.Collections.IEnumerable _IssueComments_GetEntityCollection(global::LightSwitchApplication.Issue.DetailsClass d)
                {
                    return d.ImplementationEntity.IssueComments;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _IssueTitle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _DateRaised;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _IssueDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Status;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _IssueImpactAssessment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.DateTime>.Data _TargetResolutionDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _CorrectiveAction;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CorrectiveActionCompletionTargetDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCorrectiveActionCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _PreventativeAction;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PreventativeActionCompletionTargetDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DatePreventativeActionCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateIssueClosed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data _IssueOwner;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueType>.Data _IssueType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.FurtherAction>.Data _FurtherActions;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Issue, global::LightSwitchApplication.Issue.DetailsClass, global::LightSwitchApplication.IssueComment>.Data _IssueComments;
            
        }
    
        #endregion
    }
    
    #endregion
}
